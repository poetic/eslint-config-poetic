{
  // Following AirBnB's lead
  "extends": "airbnb",

  rules: {
    // console.log is important for development, so let's not
    // throw errors for it.
    "no-console":  0,
    "no-debugger": 0,
  },

  // To configure global variables inside of a configuration file, use the
  // globals key and indicate the global variables you want to use. Set each
  // global variable name equal to true to allow the variable to be overwritten
  // or false to disallow overwriting.
  globals: {
    // Meteor core
    "Meteor": false,
    "DDP": false,
    "Mongo": false, //Meteor.Collection renamed to Mongo.Collection
    "Session": false,
    "Accounts": false,
    "Template": false,
    "Blaze": false,  //UI is being renamed Blaze
    "UI": false,
    "Match": false,
    "check": false,
    "Tracker": false, //Deps renamed to Tracker
    "Deps": false,
    "ReactiveVar": false,
    "EJSON": false,
    "HTTP": false,
    "Email": false,
    "Assets": false,
    "Handlebars": false,      // https://github.com/meteor/meteor/wiki/Handlebars
    "Package": false,
    "App": false, //mobile-config.js

    // Meteor internals
    "DDPServer": false,
    "global": false,
    "Log": false,
    "MongoInternals": false,
    "process": false,
    "WebApp": false,
    "WebAppInternals": false,

    // globals useful when creating Meteor packages
    "Npm": false,
    "Tinytest": false,

    // common Meteor packages
    "Random": false,
    "_": false,               // Underscore.js/lodash
    "$": false,               // jQuery
    "Router": false,          // iron-router
    "FlowRouter": false,      // flow-router
    "React": false,           // React
    "ReactLayout": false,     // ReactLayout

    // App packages
    "SimpleSchema": false,
    "Roles": false,

    // Collections
    "Users": true,
  }
}

